spring.application.name=user-service
# Set the port for the User Service
server.port=8081

# ==================================
# SQL Server Datasource Configuration
# ==================================
# =========================================================
# SQL Server Datasource Configuration (Windows Authentication)
# =========================================================

# The connection URL for your local SQL Server instance.
# Note the server name is 'MUSTAFA' and we've added 'integratedSecurity=true'
# The 'encrypt=true;trustServerCertificate=true;' is still good practice.
#spring.datasource.url=jdbc:sqlserver://MUSTAFA:1433;databaseName=streamyard_db;integratedSecurity=true;encrypt=true;trustServerCertificate=true;
spring.datasource.url=jdbc:sqlserver://Mustafa:1433;databaseName=streamyard_db;encrypt=true;trustServerCertificate=true;

# The username and password you created in Step 1.
spring.datasource.username=streamyard_user
spring.datasource.password=1234

# Tells Hibernate which SQL "dialect" to use for generating commands.
spring.jpa.database-platform=org.hibernate.dialect.SQLServerDialect

# 'update' will create/update the database schema based on your @Entity classes
spring.jpa.hibernate.ddl-auto=update

# (Optional) Shows the actual SQL commands Hibernate runs in the console.
spring.jpa.show-sql=true

# ==================================
# JWT Configuration
# ==================================

# IMPORTANT: This secret key should be long, random, and kept secret in production.
# For development, this is fine. Generate your own at a site like randomkeygen.com (512-bit).
app.jwt.secret=a2a8e4a7d4e5f8a2a8e4a7d4e5f8a2a8e4a7d4e5f8a2a8e4a7d4e5f8a2a8e4a7d4e5f8

# Token expiration time in milliseconds.
# 86400000 ms = 24 hours
app.jwt.expiration-ms=86400000